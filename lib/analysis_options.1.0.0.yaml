# Enable all rules by default
include: all_lint_rules.yaml

analyzer:
  strong-mode:
    implicit-casts: false
    implicit-dynamic: false

  errors:
    # Otherwise cause the import of all_lint_rules to warn because of some rules conflicts.
    # The conflicts are fixed in this file instead, so we can safely ignore the warning.
    included_file_warning: ignore

  exclude:
    # ignore warnings in files from json_serializable, built_value and most generators
    - "**/*.g.dart"
    # ignore warnings in files generated by Freezed specifically.
    - "**/*.freezed.dart"

# Explicitly disable only the rules we do not want.
linter:
  rules:
    always_put_control_body_on_new_line: false
    always_put_required_named_parameters_first: false
    always_specify_types: false
    always_use_package_imports: false
    avoid_annotating_with_dynamic: false
    avoid_bool_literals_in_conditional_expressions: false
    avoid_catches_without_on_clauses: false
    avoid_catching_errors: false
    avoid_classes_with_only_static_members: false
    avoid_double_and_int_checks: false
    avoid_equals_and_hash_code_on_mutable_classes: false
    avoid_escaping_inner_quotes: false
    avoid_field_initializers_in_const_classes: false
    avoid_implementing_value_types: false
    avoid_js_rounded_ints: false
    avoid_multiple_declarations_per_line: false
    avoid_positional_boolean_parameters: false
    avoid_print: false
    avoid_private_typedef_functions: false
    avoid_redundant_argument_values: false
    avoid_returning_null_for_future: false
    avoid_returning_null_for_void: false
    avoid_returning_this: false
    avoid_setters_without_getters: false
    avoid_slow_async_io: false
    avoid_type_to_string: false
    avoid_types_on_closure_parameters: false
    avoid_unnecessary_containers: false
    avoid_void_async: false
    avoid_web_libraries_in_flutter: false
    cast_nullable_to_non_nullable: false
    close_sinks: false
    deprecated_consistency: false
    diagnostic_describe_all_properties: false
    do_not_use_environment: false
    exhaustive_cases: false
    file_names: false
    flutter_style_todos: false
    join_return_with_assignment: false
    leading_newlines_in_multiline_strings: false
    library_private_types_in_public_api: false
    literal_only_boolean_expressions: false
    missing_whitespace_between_adjacent_strings: false
    no_default_cases: false
    no_logic_in_create_state: false
    no_runtimeType_toString: false
    null_check_on_nullable_type_parameter: false
    one_member_abstracts: false
    parameter_assignments: false
    prefer_asserts_in_initializer_lists: false
    prefer_asserts_with_message: false
    prefer_const_constructors_in_immutables: false
    prefer_const_declarations: false
    prefer_const_literals_to_create_immutables: false
    prefer_constructors_over_static_methods: false
    prefer_double_quotes: false
    prefer_expression_function_bodies: false
    prefer_final_in_for_each: false
    prefer_final_locals: false
    prefer_foreach: false
    prefer_function_declarations_over_variables: false
    prefer_if_elements_to_conditional_expressions: false
    prefer_int_literals: false
    prefer_is_not_operator: false
    prefer_mixin: false
    prefer_null_aware_method_calls: false
    prefer_null_aware_operators: false
    prefer_relative_imports: false
    prefer_void_to_null: false
    provide_deprecation_message: false
    # someday maybe
    public_member_api_docs: false
    require_trailing_commas: false
    sized_box_for_whitespace: false
    sort_pub_dependencies: false
    sort_unnamed_constructors_first: false
    tighten_type_of_initializing_formals: false
    type_annotate_public_apis: false
    unnecessary_await_in_return: false
    unnecessary_final: false
    unnecessary_null_checks: false
    unnecessary_nullable_for_final_variable_declarations: false
    unnecessary_overrides: false
    unnecessary_parenthesis: false
    unnecessary_raw_strings: false
    unnecessary_string_escapes: false
    unnecessary_string_interpolations: false
    use_build_context_synchronously: false
    use_if_null_to_convert_nulls_to_bools: false
    use_is_even_rather_than_modulo: false
    use_late_for_private_fields_and_variables: false
    use_named_constants: false
    use_raw_strings: false
    use_setters_to_change_properties: false
    use_string_buffers: false
    use_to_and_as_if_applicable: false
    void_checks: false